<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:ViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:js="library://ns.apache.org/flexjs/flat"
			    width="100%" height="100%" xmlns:ns="library://ns.apache.org/flexjs/basic">
    <fx:Script>
        <![CDATA[
            import models.MyModel;
            
            import org.apache.flex.events.Event;

            public static const EVENT_DEV_SUBSCRIBE:String = "devSubscribe";
            public static const EVENT_DEV_UNSUBSCRIBE:String = "devUnsubscribe";
            public static const EVENT_DEV_ARCHIVE:String = "devArchive";
            public static const EVENT_DEV_MAIL:String = "devMail";
            public static const EVENT_USERS_SUBSCRIBE:String = "usersSubscribe";
            public static const EVENT_USERS_UNSUBSCRIBE:String = "usersUnsubscribe";
            public static const EVENT_USERS_ARCHIVE:String = "usersArchive";
            public static const EVENT_USERS_MAIL:String = "usersMail";
            public static const EVENT_ISSUES_TRACKER:String = "issuesTracker";
            public static const EVENT_ISSUES_CREATE:String = "issuesCreate";
            public static const EVENT_PRODUCT_CHANGED:String = "productChanged";
            public static const EVENT_DOWNLOAD_PRODUCT:String = "downloadProduct";
            
		]]>
    </fx:Script>
	<fx:Style source="main.css" />
    <js:states>
        <js:State name="hideAll" />        
        <js:State name="showAll" />        
    </js:states>
    <js:beads>
        <ns:ContainerDataBinding />
        <js:VerticalLayout />
    </js:beads>
    <js:HContainer className="titleContainer">
        <js:Image id="projectImage" source="{MyModel(applicationModel).projectIcon}" />
        <js:Label id="projectName" style="fontSize:30" html="{MyModel(applicationModel).projectTitle}" />
    </js:HContainer>
    <js:HContainer width="100%" height="50%">
        <js:Panel title="{MyModel(applicationModel).devListName}" width="45%" height="100%">
            <js:beads>
                <js:VerticalLayout />
            </js:beads>
<!--            <js:Label id="committers" text="{MyModel(applicationModel).numDevSubscribers + ' Subscribers'}" />-->
            <js:MultilineLabel id="devFolks" width="100%" text="{'This mailing list is for discussing the development of ' + MyModel(applicationModel).projectName + '.'}" /> 
            <!--            <js:Label id="committers" text="{MyModel(applicationModel).numCommitters + ' Committers, of which'}" />
            <js:Label id="pmc" text="{MyModel(applicationModel).numPMC + ' are Project Management Committee members.'}" />-->
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="subLabel" />
                </js:beads>
                <js:TextButton text="Subscribe" className="mailButton" click="dispatchEvent(new Event(EVENT_DEV_SUBSCRIBE))" />
                <js:MultilineLabel id="subLabel" text="Just send the email.  No subject or other information is required.  You will receive an email from a robot that you must reply to." />
            </js:Container> 
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="unsubLabel" />
                </js:beads>
                <js:TextButton text="Unsubscribe" className="mailButton" click="dispatchEvent(new Event(EVENT_DEV_UNSUBSCRIBE))" />
                <js:MultilineLabel id="unsubLabel" text="Just send the email.  No subject or other information is required.  Assumes you are sending from the same email you used to subscribe." />
            </js:Container> 
            <js:TextButton text="View Past Discussions" className="discussButton" click="dispatchEvent(new Event(EVENT_DEV_ARCHIVE))" />
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="sendLabel" />
                </js:beads>
                <js:TextButton text="Send us an email" className="mailButton" click="dispatchEvent(new Event(EVENT_DEV_MAIL))" />
                <js:MultilineLabel id="sendLabel" text="May be delayed waiting for moderator approval if you aren't subscribed." />
            </js:Container> 
        </js:Panel>
        <js:Panel title="{MyModel(applicationModel).usersListName}" width="45%" height="100%" style="marginLeft:10px">
            <js:beads>
                <js:VerticalLayout />
            </js:beads>
            <!--            <js:Label id="committers" text="{MyModel(applicationModel).numDevSubscribers + ' Subscribers'}" />-->
            <js:MultilineLabel id="userslist" width="100%" text="{'This mailing list is for questions and answers on how to use ' + MyModel(applicationModel).projectName + '.'}" />
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="subUserLabel" />
                </js:beads>
                <js:TextButton text="Subscribe" className="mailButton" click="dispatchEvent(new Event(EVENT_USERS_SUBSCRIBE))" />
                <js:MultilineLabel id="subUserLabel" text="Just send the email.  No subject or other information is required.  You will receive an email from a robot that you must reply to." />
            </js:Container> 
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="unsubUserLabel" />
                </js:beads>
                <js:TextButton text="Unsubscribe" className="mailButton" click="dispatchEvent(new Event(EVENT_USERS_UNSUBSCRIBE))" />
                <js:MultilineLabel id="unsubUserLabel" text="Just send the email.  No subject or other information is required.  Assumes you are sending from the same email you used to subscribe." />
            </js:Container> 
            <js:TextButton text="View Past Discussions" className="discussButton" click="dispatchEvent(new Event(EVENT_USERS_ARCHIVE))" />
            <js:Container className="buttonAndLabel">
                <js:beads>
                    <js:OneFlexibleChildHorizontalLayout flexibleChild="askLabel" />
                </js:beads>
                <js:TextButton text="Ask us a question" className="mailButton" click="dispatchEvent(new Event(EVENT_USERS_MAIL))" />
                <js:MultilineLabel id="askLabel" text="May be delayed waiting for moderator approval if you aren't subscribed." />
            </js:Container> 
        </js:Panel>
    </js:HContainer>
    <js:HContainer width="100%" height="30%" style="marginTop:10px">
        <js:Panel title="Releases" width="45%"  height="100%">
            <js:beads>
                <js:VerticalLayout />
                <js:LayoutChangeNotifier id="lcn" watchedProperty="{releaseDownloadButton.visible}" />
            </js:beads>
            <js:HContainer width="100%">
                <js:Label className="releaseDropDownLabel" text="Product:" />
                <js:Label className="releaseDropDownLabel" id="labelReleaseCount" text="{MyModel(applicationModel).releaseCount.toString() + ' Releases:'}"/>
            </js:HContainer>
            <js:HContainer>
                <js:DropDownList className="releaseDropDown" id="productList" dataProvider="{MyModel(applicationModel).productList}" labelField="name"
                                 selectedIndex="{MyModel(applicationModel).productList == null ? -1 : 0}" change="dispatchEvent(new Event(EVENT_PRODUCT_CHANGED))" />
                <js:DropDownList className="releaseDropDown" id="releaseList" dataProvider="{MyModel(applicationModel).releases}" selectedIndex="{(MyModel(applicationModel).releases == null) ? -1 : 0}" />
            </js:HContainer>
            <js:MultilineLabel style="left:20px;right:20px" text="{MyModel(applicationModel).currentDescription}" />
            <js:TextButton className="releaseDownloadButton" id="releaseDownloadButton" text="Go to Download Page" click="dispatchEvent(new Event(EVENT_DOWNLOAD_PRODUCT))" 
                           visible="{MyModel(applicationModel).releases != null}"/>
        </js:Panel>
        <js:Panel title="Bugs and Feature Requests" width="45%" height="100%" style="marginLeft:10px" >
            <js:beads>
                <js:VerticalLayout />
            </js:beads>
            <js:Label id="openIssues" text="{MyModel(applicationModel).numOpenIssues + ' Open Issues'}" />
            <js:TextButton text="View Bug Reports and Feature Requests" className="issuesButton" click="dispatchEvent(new Event(EVENT_ISSUES_TRACKER))" />
            <js:TextButton text="Create new Bug Report or Feature Request" className="issuesButton" click="dispatchEvent(new Event(EVENT_ISSUES_CREATE))" />
        </js:Panel>
    </js:HContainer>
    <!--<js:Label id="forks" text="{MyModel(applicationModel).numForks + ' Forks'}" />-->
</js:ViewBase>
